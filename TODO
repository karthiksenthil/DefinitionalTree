Following is the list of TODO tasks/features for ruby_curry :

1. Integration of translator system 
		- convert .icur to ruby object code directly
		- this removes the intermediate JSON dependency

2. Adding support for inbuilt Curry modules like "Prelude"
		- this will provide support for clauses like "case", "loop", "map" and other logical operators
		- find the Curry code for "Prelude", convert to .icur which is then compiled to prelude_objectCode in Ruby. This file can be then included in all other object code files

3. Adding support for Exempt
		- use the $fail_symbol for constructing corresponding expressions

4. Handling different datatypes (probably a type system)
		- provide support to most common types like "int", "char", "String"

5. Problem of global variables in test suite
		- try a custom script to run all test cases instead of Rake
	 Solved : Added a custom rake task itest(independent test). Run with command "rake itest".
	 Added on : 28 May 2016
	 Solved on : 1 June 2016

6. Necessary for multiple passes for fully populating symbol table
		- example of odd_even.curry

			even Zero = Zero
			even Succ x = odd x
			odd Zero = Succ Zero
			odd Succ x = even(x)

			Here when ruby_curry is parsing the second rule, it panics as it is unaware of "odd" symbol which is defined later in code.
			
		- could try multiple passes or a forward declaration concept

