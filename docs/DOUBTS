------------------------------------------------------------------
Fri Jun 24 - Karthik - Solved Jun 24

The following is the list of external functions left to be implemented:

$!!                        letrec
$##                        =:<=
prim_error                 =:<<=
==                         ifVar
=:=                        >>=
&                          return
compare                    prim_putChar
prim_negateFloat           getChar      
cond                       prim_readFile, prim_readFileContents
catch                      prim_writeFile
prim_show                  prim_appendFile


Among these I feel the special character operations like $## and ==
are important and need to implemented before other functions.

The IO functions cannot be implemented at the moment.

So can we have a priority list of functions to be implemented  ?

+++
These functions will allow us to run the most programs:
==, compare, =:=, =:<=

All I/O functions are postponed.

The remaining functions can wait.  I'll think whether and how they are needed.

------------------------------------------------------------------
Wed Jun 22 - Karthik - Solved on Jun 23

I looked up how to implement the "quot" external function. It is 
integer quotient always rounded to zero.

Claim : Ruby's "/" operator gives the same result as Prelude::quot for all
cases except when n<0 and d>0

Ruby : -15/4 => -4
Curry : quot (-15) 4 => -3

If this is correct, I can add an if condition and handle this function
in CT_External.rb. My doubt is if my claim above is true. What about
case when n<0 and d<0 ?

+++
Yes, you can add any condition or statement in the code.
Below are the formulas where the division must give a real.
I think truncate is in ruby

truncate x = if x >= 0 then floor x else ceiling x
truncate 2.3 => 2
truncate -2.3 => -2


function quotRem (x, y) {
  tmp = truncate(x / y)
  return (tmp, x - y * tmp)
}

------------------------------------------------------------------

Tue Jun 21 15:47:32 PDT 2016 - Sergio

Integer and character expressions have a type that specializes Application.
Why is this necessary ?

------------------------------------------------------------------

Tue Jun 21 15:47:32 PDT 2016 - Sergio - I think this is solved

== This problem is fixed. Non printable characters problem still persists.

A character 'x' is printed as x.
Should it be printed like 'x' ?

The idea is to print anything in a way that could be read back or cut
and pasted into a program.
We are far from that, printing character is part of it.
A complication is printing non visible characters such as '\n'.

------------------------------------------------------------------





